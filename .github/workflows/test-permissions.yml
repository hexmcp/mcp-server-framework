name: Test Permissions

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  test-permissions:
    name: Test GitHub Actions Permissions
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Test GitHub API Access
        run: |
          echo "Testing GitHub API access..."
          
          # Test if we can read repository info
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}"
          
          echo "Repository access: OK"
          
          # Test if we can list pull requests (read permission)
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/pulls"
          
          echo "Pull request read access: OK"

      - name: Test PR Creation (Dry Run)
        run: |
          echo "Testing if we can create a PR (dry run)..."
          
          # Create a test branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create a simple change
          echo "# Test PR" > test-pr.md
          git add test-pr.md
          git commit -m "test: add test file for PR permissions check"
          
          # Push to a test branch
          git checkout -b test-permissions-$(date +%s)
          git push origin HEAD
          
          echo "Test branch created successfully"
          echo "If this step passes, GitHub Actions has sufficient permissions to create PRs"

      - name: Cleanup Test Files
        if: always()
        run: |
          # Clean up test file
          rm -f test-pr.md
          echo "Cleanup completed"
