name: Release

# This workflow creates version bump pull requests when changes are pushed to main.
# It does NOT publish packages to npm automatically - publishing is disabled until MVP completion.
#
# Current behavior:
# 1. Runs quality checks (linting, type checking, tests)
# 2. Creates "Version Packages" pull requests with changelog updates
# 3. When version PR is merged, packages are versioned but NOT published
#
# To enable publishing after MVP completion:
# 1. Add NPM_TOKEN to repository secrets
# 2. Update the changesets action to include publish step
# 3. Update version-packages script to include publishing

on:
  push:
    branches:
      - main

# Workflow-level permissions
permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: read

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Create Release PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
      checks: read
      repository-projects: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # This is important for the action to be able to create PRs
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm run lint

      - name: Type check
        run: pnpm exec tsc --noEmit

      - name: Type check tests
        run: pnpm exec tsc --project tsconfig.test.json --noEmit

      - name: Run tests
        run: pnpm run test

      # Debug: Check if changesets exist
      - name: Check for changesets
        run: |
          echo "Checking for changeset files..."
          ls -la .changeset/
          echo "Changeset status:"
          pnpm changeset status

      # Create version bump PRs without publishing to npm
      # Publishing will be enabled after MVP completion
      - name: Create Release Pull Request or Apply Versions
        id: changesets
        uses: changesets/action@v1.4.7
        with:
          version: pnpm changeset version
          commit: "chore: version packages"
          title: "chore: version packages"
          createGithubReleases: false
          setupGitUser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN not needed since we're not publishing yet
          # Will be added when ready for public releases after MVP completion

      # Auto-merge the Version Packages PR if one was created
      - name: Auto-merge Version Packages PR
        if: steps.changesets.outputs.hasChangesets == 'true' && steps.changesets.outputs.pullRequestNumber != ''
        run: |
          echo "Version Packages PR created: #${{ steps.changesets.outputs.pullRequestNumber }}"
          echo "Auto-merging Version Packages PR..."

          # Enable auto-merge on the PR
          gh pr merge ${{ steps.changesets.outputs.pullRequestNumber }} \
            --auto \
            --squash \
            --delete-branch

          echo "Auto-merge enabled for PR #${{ steps.changesets.outputs.pullRequestNumber }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Fallback: If the action fails due to permissions, try manual approach
      - name: Manual Version Update (Fallback)
        if: failure()
        run: |
          echo "Changesets action failed, attempting manual version update..."

          # Check if there are changesets to process
          if pnpm changeset status | grep -q "packages to be bumped"; then
            echo "Found changesets to process"

            # Apply version changes
            pnpm changeset version

            # Check if there are changes to commit
            if git diff --quiet; then
              echo "No version changes to commit"
            else
              echo "Committing version changes..."
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add .
              git commit -m "chore: version packages"
              git push origin main
              echo "Version changes committed directly to main branch"
            fi
          else
            echo "No changesets found to process"
          fi
